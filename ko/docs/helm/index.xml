<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>헬름 명령어 on 헬름</title>
    <link>https://sma-rnd.github.io/ko/docs/helm/</link>
    <description>Recent content in 헬름 명령어 on 헬름</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <atom:link href="https://sma-rnd.github.io/ko/docs/helm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>helm</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm/</guid>
      <description>helm 쿠버네티스를 위한 헬름 패키지 매니저&#xA;개요 쿠버네티스 패키지 매니저&#xA;일반적으로 사용되는 헬름 작업:&#xA;helm search: 차트를 검색 helm pull: 확인하려는 로컬 디렉토리에 차트를 다운로드 helm install: 쿠버네티스에 차트 업로드 helm list: 차트 릴리스 리스트 표시 환경 변수:&#xA;Name Description $HELM_CACHE_HOME 캐시된 파일을 저장할 대체 위치를 지정 $HELM_CONFIG_HOME 헬름 설정을 저장할 대체 위치를 지정 $HELM_DATA_HOME 헬름 데이터를 저장할 대체 위치를 지정 $HELM_DEBUG 헬름이 디버그 모드에서 실행 중인지 여부 표시 $HELM_DRIVER 백엔드 스토리지 드라이버 설정.</description>
    </item>
    <item>
      <title>Helm Completion</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_completion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_completion/</guid>
      <description>helm completion 지정될 셸에 대한 자동 스크립트 생성&#xA;개요 지정된 셸의 헬름에 대한 자동 완성 스크립트를 생성한다.&#xA;옵션 -h, --help helm completion 명령어에 대한 도움말 부모 명령어에 상속된 옵션 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-as-group stringArray 작업할 그룹 지정. 플래그를 반복하여 여러 그룹 지정도 가능 --kube-as-user string 작업할 사용자 이름 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용될 베어러(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 -n, --namespace string 요청에 대한 네임스페이스 지정 --registry-config string 레지스트리 구성에 대한 파일 경로 (기본값 &amp;#34;~/.</description>
    </item>
    <item>
      <title>Helm Completion - bash</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_completion_bash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_completion_bash/</guid>
      <description>helm completion bash bash에 대한 자동 완성 스크립트 생성&#xA;개요 bash 셸의 헬름에 대한 자동 완성 스크립트를 생성한다.&#xA;현재 셸 세션에서 완성 기능을 로드하려면:&#xA;source &amp;lt;(helm completion bash)&#xD;새로운 세션마다 완성 기능을 로드하려면 다음 작업을 한 번 실행한다:&#xA;Linux:&#xA;helm completion bash &amp;gt; /etc/bash_completion.d/helm&#xD;MacOS:&#xA;helm completion bash &amp;gt; /usr/local/etc/bash_completion.d/helm&#xD;helm completion bash 옵션 -h, --help helm completion bash 명령어에 대한 도움말 부모 명령어에 상속된 옵션들 --add-dir-header 이 값이 참이면, 헤더에 파일 디렉토리를 추가 --alsologtostderr 파일처럼 표준 오류로도 로그 출력 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용될 베어러(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 --log-backtrace-at traceLocation 로깅 시 N행에 걸친 스택 추적 내용을 표시 (기본값 :0) --log-dir string 값을 지정하면, 지정한 디렉토리에 로그 파일 기록 --log-file string 값을 지정하면, 지정한 로그 파일 사용 --log-file-max-size uint 로그파일이 증가할 수 있는 최대 크기 지정.</description>
    </item>
    <item>
      <title>Helm Completion - fish</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_completion_fish/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_completion_fish/</guid>
      <description>helm completion fish fish에 대한 자동 완성 스크립트 생성&#xA;개요 fish 셸의 헬름에 대한 자동 완성 스크립트를 생성한다.&#xA;현재 셸 세션에서 completion 기능을 로드하려면:&#xA;helm completion fish | source&#xD;모든 새 세션에서 completion 기능을 로드하려면 다음 작업을 한 번 실행한다:&#xA;helm completion fish &amp;gt; ~/.config/fish/completions/helm.fish&#xD;이 설정을 적용하려면 새 셸을 시작해야 한다.&#xA;helm completion fish [flags] 옵션 -h, --help helm completion fish 명령어에 대한 도움말 --no-descriptions completion 세부 정보 비활성화 부모 명령어에 상속된 옵션 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-as-group stringArray 작업할 그룹 지정.</description>
    </item>
    <item>
      <title>Helm Completion - zsh</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_completion_zsh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_completion_zsh/</guid>
      <description>helm completion zsh zsh에 대한 자동 완성 스크립트 생성&#xA;개요 zsh 셸의 헬름에 대한 자동 완성 스크립트를 생성한다.&#xA;현재 셸 세션에서 완성 기능을 로드하려면:&#xA;source &amp;lt;(helm completion zsh)&#xD;새로운 세션마다 완성 기능을 로드하려면 다음 작업을 한 번 실행한다:&#xA;helm completion zsh &amp;gt; &amp;quot;${fpath[1]}/_helm&amp;quot;&#xD;helm completion zsh [flags] 옵션 -h, --help helm completion zsh 명령어에 대한 도움말 부모 명령어에 상속된 옵션들 --add-dir-header 이 값이 참이면, 헤더에 파일 디렉토리를 추가 --alsologtostderr 파일처럼 표준 오류로도 로그 출력 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용될 베어러(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 --log-backtrace-at traceLocation 로깅 시 N행에 걸친 스택 추적 내용을 표시 (기본값 :0) --log-dir string 값을 지정하면, 지정한 디렉토리에 로그 파일 기록 --log-file string 값을 지정하면, 지정한 로그 파일 사용 --log-file-max-size uint 로그파일이 증가할 수 있는 최대 크기 지정.</description>
    </item>
    <item>
      <title>Helm Create</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_create/</guid>
      <description>helm create 주어진 이름으로 새로운 차트를 생성&#xA;개요 이 명령은 차트에 사용되는 공통 파일 및 디렉토리와 함께 차트 디렉토리를 만든다.&#xA;예를 들어, &#39;helm create foo&#39; 는 다음과 같은 디렉토리 구조를 생성한다:&#xA;foo/&#xD;├── .helmignore # 헬름 차트를 패키징할 때 무시할 패턴 포함&#xD;├── Chart.yaml # 차트에 대한 정보&#xD;├── values.yaml # 템플릿의 기본값&#xD;├── charts/ # 이 차트가 의존하는 차트&#xD;└── templates/ # 템플릿 파일&#xD;└── tests/ # 테스트 파일&#xD;&#39;helm create&#39; 는 인수로 경로를 받는다.</description>
    </item>
    <item>
      <title>Helm Dependency</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_dependency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_dependency/</guid>
      <description>helm dependency 차트의 종속성을 관리&#xA;개요 차트의 종속성을 관리한다.&#xA;헬름 차트는 종속성을 &#39;charts/&#39; 에 저장한다. 차트 개발자의 경우 모든 종속성을 선언하는 &#39;Chart.yaml&#39; 에서 종속성을 관리하는 것이 더 쉬운 경우가 많다.&#xA;종속성 명령은 해당 파일에서 작동하므로 원하는 종속성과 &#39;charts/&#39; 디렉토리에 저장된 실제 종속성을 쉽게 동기화 할 수 있다.&#xA;예를 들어 이 Chart.yaml 은 두 가지 종속성을 선언한다.&#xA;# Chart.yaml&#xD;dependencies:&#xD;- name: nginx&#xD;version: &amp;quot;1.2.3&amp;quot;&#xD;repository: &amp;quot;https://example.com/charts&amp;quot;&#xD;- name: memcached&#xD;version: &amp;quot;3.</description>
    </item>
    <item>
      <title>Helm Dependency Build</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_dependency_build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_dependency_build/</guid>
      <description>helm dependency build Chart.lock 파일을 기반으로 charts/ 디렉토리를 다시 빌드&#xA;개요 Chart.lock 파일에서 charts/ 디렉토리를 빌드한다.&#xA;빌드는 잠금파일에 지정된 상태에 대한 차트의 종속성을 재구성하는데 사용된다. 이것은 &#39;helm dependency update&#39; 처럼 종속성을 다시 재협상하지 않는다.&#xA;잠금 파일이 없으면 &#39;helm dependency build&#39;는 &#39;helm dependency update&#39;의 동작을 미러링합니다.&#xA;helm dependency build CHART [flags] 옵션 -h, --help helm dependency build 명령어에 대한 도움말 --keyring string 공개 키를 포함하는 키링 (기본값 &amp;#34;~/.gnupg/pubring.gpg&amp;#34;) --verify 서명과 비교하여 패키지 확인 부모 명령어에서 상속된 옵션들 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-as-group stringArray 작업에 관해 제시할 그룹.</description>
    </item>
    <item>
      <title>Helm Dependency List</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_dependency_list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_dependency_list/</guid>
      <description>helm dependency list 주어진 차트에 대한 종속성을 나열&#xA;개요 차트에 선언된 모든 종속성을 나열한다.&#xA;이것은 차트 아카이브 및 차트 디렉토리를 입력으로 사용할수 있다. 차트의 내용은 변경되지 않는다.&#xA;차트를 로드할 수 없는 경우 오류가 발생한다.&#xA;helm dependency list CHART [flags] 옵션 -h, --help helm dependency list 명령어에 대한 도움말 부모 명령어에서 상속된 옵션들 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-as-group stringArray 작업에 관해 제시할 그룹. 플래그를 여러 번 사용하여 여러 그룹 지정 가능 --kube-as-user string 작업에 관해 제시할 사용자명 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용될 베어러(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 -n, --namespace string 이 요청에 대한 네임스페이스 스코프 --registry-config string 레지스트리 구성 파일에 대한 경로 (기본값 &amp;#34;~/.</description>
    </item>
    <item>
      <title>Helm Dependency Update</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_dependency_update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_dependency_update/</guid>
      <description>helm dependency update Chart.yaml 의 내용에 따라 charts/ 업데이트&#xA;개요 Chart.yaml 을 미러링하도록 온-디스크 종속성을 업데이트한다.&#xA;이 명령은 &#39;Chart.yaml&#39; 에 표현된 필수 차트가 &#39;charts/&#39; 에 있고 허용 가능한 버전인지를 확인한다. 종속성을 충족하는 최신 차트를 풀다운(pull down)하고 이전 종속성을 정리한다.&#xA;업데이트가 성공하면 종속성을 정확한 버전으로 다시 빌드하는데 사용할 수 있는 잠금파일이 생성된다.&#xA;종속성은 &#39;Chart.yaml&#39; 에 표시할 필요가 없다. 따라서 업데이트 명령은 차트가 (a)Chart.yaml 파일에 있지만, (b)잘못된 버전이 아니면 차트를 제거하지 않는다.</description>
    </item>
    <item>
      <title>Helm Env</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_env/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_env/</guid>
      <description>helm env 헬름 클라이언트 환경변수 정보&#xA;개요 Env 는 헬름에서 사용 중인 모든 환경변수 정보를 출력한다.&#xA;helm env [flags] 옵션 -h, --help env 에 대한 도움말 부모 명령어에서 상속된 옵션들 --add-dir-header 이 값이 참이면, 헤더에 파일 디렉토리를 추가 --alsologtostderr 표준 오류를 로그 및 파일로 표시 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용될 베어러(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 --log-backtrace-at traceLocation 로깅 시 N 행에 걸친 스택 추적 내용을 표시 (기본값 :0) --log-dir string 값을 지정하면, 지정한 디렉토리에 로그 파일 기록 --log-file string 값을 지정하면, 지정한 로그 파일 사용 --log-file-max-size uint 로그파일이 증가할 수 있는 최대 크기 지정.</description>
    </item>
    <item>
      <title>Helm Get</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_get/</guid>
      <description>helm get 명명된 릴리스의 확장 정보 다운로드&#xA;개요 이 명령은 다음을 포함하여 릴리스에 대한 확장 정보를 가져오는 데 사용할 수 있는 여러가지 하위 명령으로 구성된다.&#xA;릴리스 생성에 사용되는 값 생성된 매니페스트 파일 릴리스 차트에서 제공하는 노트 릴리스와 관련된 훅(hooks) 옵션 -h, --help get 에 대한 도움말 부모 명령어에서 상속된 옵션들 --add-dir-header 이 값이 true이면, 헤더에 파일 디렉토리를 추가한다 --alsologtostderr 파일처럼 표준오류(stderr)로도 로그 출력 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용할 베어러(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 --log-backtrace-at traceLocation 로깅 시 N 행에 걸친 스택 추적 내용을 표시 (기본값 :0) --log-dir string 값을 지정하면, 지정한 디렉토리에 로그 파일 기록 --log-file string 값을 지정하면, 지정한 로그 파일 사용 --log-file-max-size uint 로그파일이 증가할 수 있는 최대 크기 지정.</description>
    </item>
    <item>
      <title>Helm Get All</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_get_all/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_get_all/</guid>
      <description>helm get all 명명된 릴리스에 대한 모든 정보 다운로드&#xA;개요 이 명령어는 지정한 릴리스에서 노트, 훅, 제공된 값 및 생성된 매니페스트 파일에 대한 정보를 사람이 읽을 수 있는 콜렉션으로 출력한다.&#xA;helm get all RELEASE_NAME [flags] 옵션 -h, --help all 에 대한 도움말 --revision int 리비전으로 명명된 릴리스 가져오기 --template string 출력 형식 지정을 위한 go 템플릿. 예: {{.Release.Name}} 부모 명령어에서 상속된 옵션들 --add-dir-header 이 값이 true이면, 헤더에 파일 디렉토리를 추가한다 --alsologtostderr 파일처럼 표준오류(stderr)로도 로그 출력 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용할 베어러(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 --log-backtrace-at traceLocation 로깅 시 N 행에 걸친 스택 추적 내용을 표시 (기본값 :0) --log-dir string 값을 지정하면, 지정한 디렉토리에 로그 파일 기록 --log-file string 값을 지정하면, 지정한 로그 파일 사용 --log-file-max-size uint 로그파일이 증가할 수 있는 최대 크기 지정.</description>
    </item>
    <item>
      <title>Helm Get Hooks</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_get_hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_get_hooks/</guid>
      <description>helm get hooks 명명된 릴리스에 대한 모든 훅 다운로드&#xA;개요 이 명령어는 지정한 릴리스에 대한 훅을 다운로드한다.&#xA;훅은 YAML로 형식이며 YAML &#39;---\n&#39; 구분자로 구분된다.&#xA;helm get hooks RELEASE_NAME [flags] 옵션 -h, --help hooks 에 대한 도움말 --revision int 리비전으로 명명된 릴리스 가져오기 부모 명령어에서 상속된 옵션들 --add-dir-header 이 값이 true이면, 헤더에 파일 디렉토리를 추가한다 --alsologtostderr 파일처럼 표준오류(stderr)로도 로그 출력 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용할 베어러(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 --log-backtrace-at traceLocation 로깅 시 N 행에 걸친 스택 추적 내용을 표시 (기본값 :0) --log-dir string 값을 지정하면, 지정한 디렉토리에 로그 파일 기록 --log-file string 값을 지정하면, 지정한 로그 파일 사용 --log-file-max-size uint 로그파일이 증가할 수 있는 최대 크기 지정.</description>
    </item>
    <item>
      <title>Helm Get Manifest</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_get_manifest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_get_manifest/</guid>
      <description>helm get manifest 명명된 릴리스에 대한 매니페스트 다운로드&#xA;개요 이 명령어는 지정한 릴리스에 대해 생성된 매니페스트를 가져온다.&#xA;매니페스트는 이 릴리스의 차트에서 생성된 쿠버네티스 리소스를 YAML 로 인코딩한 표현이다. 차트가 다른 차트에 종속된 경우 해당 리소스도 매니페스트에 포함된다.&#xA;helm get manifest RELEASE_NAME [flags] 옵션 -h, --help manifest 에 대한 도움말 --revision int 리비전으로 명명된 릴리스 가져오기 부모 명령어에서 상속된 옵션들 --add-dir-header 이 값이 true이면, 헤더에 파일 디렉토리를 추가한다 --alsologtostderr 파일처럼 표준오류(stderr)로도 로그 출력 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용할 베어러(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 --log-backtrace-at traceLocation 로깅 시 N 행에 걸친 스택 추적 내용을 표시 (기본값 :0) --log-dir string 값을 지정하면, 지정한 디렉토리에 로그 파일 기록 --log-file string 값을 지정하면, 지정한 로그 파일 사용 --log-file-max-size uint 로그파일이 증가할 수 있는 최대 크기 지정.</description>
    </item>
    <item>
      <title>Helm Get Notes</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_get_notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_get_notes/</guid>
      <description>helm get notes 명명된 릴리스에 대한 노트 다운로드&#xA;개요 이 명령어는 명명된 릴리스의 차트에서 제공하는 노트를 보여준다.&#xA;helm get notes RELEASE_NAME [flags] 옵션 -h, --help notes 에 대한 도움말 --revision int 리비전으로 명명된 릴리스 가져오기 부모 명령어에서 상속된 옵션들 --add-dir-header 이 값이 true이면, 헤더에 파일 디렉토리를 추가한다 --alsologtostderr 파일처럼 표준오류(stderr)로도 로그 출력 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용할 베어러(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 --log-backtrace-at traceLocation 로깅 시 N 행에 걸친 스택 추적 내용을 표시 (기본값 :0) --log-dir string 값을 지정하면, 지정한 디렉토리에 로그 파일 기록 --log-file string 값을 지정하면, 지정한 로그 파일 사용 --log-file-max-size uint 로그파일이 증가할 수 있는 최대 크기 지정.</description>
    </item>
    <item>
      <title>Helm Get Values</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_get_values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_get_values/</guid>
      <description>helm get values 명명된 릴리스에 대한 값 파일 다운로드&#xA;개요 이 명령어는 주어진 릴리스에 대한 값 파일을 다운로드한다.&#xA;helm get values RELEASE_NAME [flags] 옵션 -a, --all 모든 (계산 된) 값 덤프 -h, --help values 에 대한 도움말 -o, --output format 지정한 형식으로 출력을 표시. 허용되는 값: table, json, yaml (기본값 table) --revision int 리비전으로 명명된 릴리스 가져오기 부모 명령어에서 상속된 옵션들 --add-dir-header 이 값이 true이면, 헤더에 파일 디렉토리를 추가한다 --alsologtostderr 파일처럼 표준오류(stderr)로도 로그 출력 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용할 베어러(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 --log-backtrace-at traceLocation 로깅 시 N 행에 걸친 스택 추적 내용을 표시 (기본값 :0) --log-dir string 값을 지정하면, 지정한 디렉토리에 로그 파일 기록 --log-file string 값을 지정하면, 지정한 로그 파일 사용 --log-file-max-size uint 로그파일이 증가할 수 있는 최대 크기 지정.</description>
    </item>
    <item>
      <title>Helm History</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_history/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_history/</guid>
      <description>helm history 릴리스 히스토리를 가져온다.&#xA;개요 History 명령어는 주어진 릴리즈에 대한 리비젼 기록을 출력한다.&#xA;기본 최대 256개 리비전이 반환된다. &#39;--max&#39; 설정은 반환되는 리비젼 목록의 최대 길이를 지정한다.&#xA;릴리스 기록은 형식이 지정된 테이블의 형태로 출력된다. 예:&#xA;$ helm history angry-bird&#xD;REVISION UPDATED STATUS CHART APP VERSION DESCRIPTION&#xD;1 Mon Oct 3 10:15:13 2016 superseded alpine-0.1.0 1.0 Initial install&#xD;2 Mon Oct 3 10:15:13 2016 superseded alpine-0.1.0 1.0 Upgraded successfully&#xD;3 Mon Oct 3 10:15:13 2016 superseded alpine-0.</description>
    </item>
    <item>
      <title>Helm Install</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_install/</guid>
      <description>helm install 차트를 설치한다.&#xA;개요 이 명령은 차트 아카이브를 설치한다.&#xA;install 인수는 차트 참조, 패키지 된 차트 경로, 압축 해제 된 차트 디렉토리 경로 또는 URL 이어야한다.&#xA;차트의 값을 재정의하려면 &#39;--values&#39; 플래그를 사용하고 파일을 전달하거나 &#39;--set&#39; 플래그를 사용하고 명령 줄에서 구성을 전달하고 문자열 값에 &#39;--set-string&#39; 을 사용한다. 값이 커서 &#39;--values&#39; 도 &#39;--set&#39; 도 사용하지 않으려면 &#39;--set-file&#39; 을 사용하여 파일에서 하나의 큰 값을 읽도록 하자.&#xA;$ helm install -f myvalues.yaml myredis .</description>
    </item>
    <item>
      <title>Helm Lint</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_lint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_lint/</guid>
      <description>helm lint 이슈가 발생하지 않을지 차트를 검토한다&#xA;개요 이 명령은 차트 경로를 받아 해당 차트가 올바른 형식(well-formed)인지 검증하는 일련의 테스트를 실행한다.&#xA;만약 린터(linter)가 차트 설치 실패를 일으킬만한 사항을 발견하면, [ERROR] 메세지를 발생시킬 것이다. 컨벤션이나 권장사항을 위반한 이슈를 발견하면, [WARNING] 메세지를 발생시킬 것이다.&#xA;helm lint PATH [flags] 옵션 -h, --help lint 에 대한 도움말 --set stringArray 명령 줄에 값을 설정 (쉼표로 여러 값 또는 개별 값을 지정 가능: 키1=값1,키2=값2) --set-file stringArray 명령 줄을 통해 지정된 각 파일에서 값을 설정 (쉼표로 여러 값 또는 개별 값을 지정 가능: 키1=값1,키2=값2) --set-string stringArray 명령 줄에서 STRING 값 설정 (쉼표로 여러 값 또는 개별 값을 지정 가능: 키1=값1,키2=값2) --strict 검토 경고(lint warning)시 실패로 판정 -f, --values strings YAML 파일 또는 URL 에 값 지정 (여러 개 지정 가능) --with-subcharts 하위 차트 의존성 검토 부모 명령어에서 상속된 옵션들 --add-dir-header true이면, 헤더에 파일 디렉토리를 추가 --alsologtostderr 파일처럼 로그를 표준 오류로로 출력 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용될 베어러(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 --log-backtrace-at traceLocation 로깅 시 N 행에 걸친 스택 추적 내용을 표시 (기본값 :0) --log-dir string 값을 지정하면, 지정한 디렉토리에 로그 파일 기록 --log-file string 값을 지정하면, 지정한 로그 파일 사용 --log-file-max-size uint 로그파일이 증가할 수 있는 최대 크기 지정.</description>
    </item>
    <item>
      <title>Helm List</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_list/</guid>
      <description>helm list 릴리스를 나열한다.&#xA;개요 이 명령은 지정된 네임 스페이스에 대한 모든 릴리스를 나열헌다 (네임 스페이스가 지정되지 않은 경우 현재 네임 스페이스 컨텍스트 사용).&#xA;기본적으로는, 배포되었거나 실패한 릴리스만 나열한다. &#39;--uninstalled&#39; 및 &#39;--all&#39; 과 같은 플래그는 이 동작을 변경한다. 이러한 플래그는 &#39;--uninstalled --failed&#39; 와 같이 결합 할 수 있다.&#xA;기본적으로, 항목은 알파벳순으로 정렬된다. 출시 날짜별로 정렬하려면 &#39;-d&#39; 플래그를 사용하자.&#xA;--filter 플래그가 제공되면 필터로 처리된다. 필터는 릴리스 목록에 적용되는 정규식 (Perl 호환 가능)이다.</description>
    </item>
    <item>
      <title>Helm Package</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_package/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_package/</guid>
      <description>helm package 차트 디렉토리를 차트 아카이브로 패키징&#xA;개요 이 명령어는 차트를, 버전이 지정된 차트 아카이브 파일로 패키징한다. 경로가 지정되면 차트(Chart.yaml 파일을 포함해야 함)에 대한 그 경로를 찾은 다음 해당 디렉토리를 패키징한다.&#xA;버전이 지정된 차트 아카이브는 헬름 패키지 저장소에서 사용된다.&#xA;차트에 서명하려면 --sign 플래그를 사용하자. 대부분의 경우, &#39;--keyring path/to/secret/keys&#39; 와 &#39;--key keyname&#39; 도 지정해야 할 것이다.&#xA;$ helm package --sign ./mychart --key mykey --keyring ~/.gnupg/secring.gpg&#xA;&#39;--keyring&#39; 을 지정하지 않았고 별다른 설정을 하지 않은 환경이라면 헬름은 보통 공개 키링을 기본값으로 사용한다.</description>
    </item>
    <item>
      <title>Helm Plugin</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_plugin/</guid>
      <description>helm plugin 헬름 플러그인 설치, 나열, 제거&#xA;개요 클라이언트 측 헬름 플러그인을 관리한다.&#xA;옵션 -h, --help helm plugin 명령어의 도움말 부모 명령어로부터 상속된 옵션 --debug 자세한 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-as-group stringArray 작업을 가장(impersonate)하기 위한 그룹. 이 플래그를 반복하여 여러 그룹을 지정 가능 --kube-as-user string 작업을 가장할 사용자 이름 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용할 전달자(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 -n, --namespace string 이 요청의 네임스페이스 범위 --registry-config string 레지스트리 구성 파일에 대한 경로 (기본값 &amp;#34;~/.</description>
    </item>
    <item>
      <title>Helm Plugin Install</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_plugin_install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_plugin_install/</guid>
      <description>helm plugin install 하나 이상의 헬름 플러그인을 설치한다.&#xA;Synopsis 이 명령을 사용하면 URL에서 VCS 저장소 또는 로컬 경로로 플러그인을 설치할 수 있다.&#xA;helm plugin install [options] &amp;lt;path|url&amp;gt;... [flags] 옵션 -h, --help helm plugin install 명령어의 도움말 --version string 버전을 강제로 지정. 지정하지 않으면 최신 버전을 설치 부모 명령어로부터 상속된 옵션 --debug 자세한 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-as-group stringArray 작업을 가장(impersonate)하기 위한 그룹. 이 플래그를 반복하여 여러 그룹을 지정 가능 --kube-as-user string 작업을 가장할 사용자 이름 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용할 전달자(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 -n, --namespace string 이 요청의 네임스페이스 범위 --registry-config string 레지스트리 구성 파일에 대한 경로 (기본값 &amp;#34;~/.</description>
    </item>
    <item>
      <title>Helm Plugin List</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_plugin_list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_plugin_list/</guid>
      <description>helm plugin list 설치된 헬름 플러그인 나열&#xA;개요 설치된 헬름 플러그인을 나열한다.&#xA;helm plugin list [flags] 옵션 -h, --help helm plugin list 명령어의 도움말 부모 명령어로부터 상속된 옵션 --debug 자세한 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-as-group stringArray 작업을 가장(impersonate)하기 위한 그룹. 이 플래그를 반복하여 여러 그룹을 지정 가능 --kube-as-user string 작업을 가장할 사용자 이름 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용할 전달자(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 -n, --namespace string 이 요청의 네임스페이스 범위 --registry-config string 레지스트리 구성 파일에 대한 경로 (기본값 &amp;#34;~/.</description>
    </item>
    <item>
      <title>Helm Plugin Uninstall</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_plugin_uninstall/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_plugin_uninstall/</guid>
      <description>helm plugin uninstall 하나 이상의 헬름 플러그인을 제거&#xA;개요 하나 이상의 헬름 플러그인을 제거한다.&#xA;helm plugin uninstall &amp;lt;plugin&amp;gt;... [flags] 옵션 -h, --help helm plugin uninstall 명령어의 도움말 부모 명령어로부터 상속된 옵션 --debug 자세한 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-as-group stringArray 작업을 가장(impersonate)하기 위한 그룹. 이 플래그를 반복하여 여러 그룹을 지정 가능 --kube-as-user string 작업을 가장할 사용자 이름 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용할 전달자(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 -n, --namespace string 이 요청의 네임스페이스 범위 --registry-config string 레지스트리 구성 파일에 대한 경로 (기본값 &amp;#34;~/.</description>
    </item>
    <item>
      <title>Helm Plugin Update</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_plugin_update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_plugin_update/</guid>
      <description>helm plugin update 하나 이상의 헬름 플러그인 업데이트&#xA;Synopsis 하나 이상의 헬름 플러그인을 업데이트한다.&#xA;helm plugin update &amp;lt;plugin&amp;gt;... [flags] 옵션 -h, --help helm plugin update 명령어의 도움말 부모 명령어로부터 상속된 옵션 --debug 자세한 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-as-group stringArray 작업을 가장(impersonate)하기 위한 그룹. 이 플래그를 반복하여 여러 그룹을 지정 가능 --kube-as-user string 작업을 가장할 사용자 이름 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용할 전달자(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 -n, --namespace string 이 요청의 네임스페이스 범위 --registry-config string 레지스트리 구성 파일에 대한 경로 (기본값 &amp;#34;~/.</description>
    </item>
    <item>
      <title>Helm Pull</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_pull/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_pull/</guid>
      <description>helm pull 저장소에서 차트를 다운로드하고 (선택적으로) 로컬 디렉터리에 압축 해제&#xA;개요 패키지 저장소에서 패키지를 검색하고 로컬로 다운로드 한다.&#xA;이는 검사, 수정 또는 리패키지를 위하여 패키지를 가져올 때 유용하다. 또한 설치하지 않고 차트의 암호화 검증을 수행하는 데 사용할 수도 있다.&#xA;다운로드 후 차트를 풀 수 있는 옵션이 있다. 그러면 차트에 대한 디렉터리가 생성되고 해당 디렉터리에 압축이 해제된다.&#xA;--verify 플래그가 지정된 경우, 요청된 차트에는 출처 파일이 있어야 하며 확인 프로세스를 통과해야 한다. 프로세스 중 어느 부분에서라도 실패할 경우 오류가 발생할 수 있으며, 차트가 로컬에 저장되지 않는다.</description>
    </item>
    <item>
      <title>Helm Repo</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_repo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_repo/</guid>
      <description>helm repo 차트 저장소 추가, 나열, 제거, 업데이트, 색인 생성&#xA;개요 이 명령은 차트 저장소와 상호작용하는 여러 하위명령으로 구성된다.&#xA;차트 저장소를 추가, 제거, 나열, 색인화 하는데 사용될 수 있다.&#xA;옵션 -h, --help helm repo 에 대한 도움말 부모 명령어에서 상속된 옵션들 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-as-group stringArray 작업에 관해 제시할 그룹. 플래그를 여러 번 사용하여 여러 그룹 지정 가능 --kube-as-user string 작업에 관해 제시할 사용자명 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용될 베어러(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 -n, --namespace string 이 요청에 대한 네임스페이스 스코프 --registry-config string 레지스트리 구성 파일에 대한 경로 (기본값 &amp;#34;~/.</description>
    </item>
    <item>
      <title>Helm Repo Add</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_repo_add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_repo_add/</guid>
      <description>helm repo add 차트 저장소를 추가&#xA;개요 차트 저장소를 추가한다.&#xA;helm repo add [NAME] [URL] [flags] 옵션 --allow-deprecated-repos 기본적으로, 이 명령은 영구적으로 삭제된 공식 저장소를 추가하는 것을 허용하지 않으며, 이 옵션을 통해 해당 동작을 비활성화. --ca-file string 이 CA 번들을 사용하여 HTTPS 사용 서버의 인증서를 확인 --cert-file string 이 SSL 인증서 파일을 사용하여 HTTPS 클라이언트 식별 --force-update 레포지터리가 이미 있는 경우 교체(덮어쓰기) -h, --help helm repo add 명령어에 대한 도움말 --insecure-skip-tls-verify 저장소에 대한 TLS 인증서 검사 건너뛰기 --key-file string 이 SSL 키 파일을 사용하여 HTTPS 클라이언트 식별 --no-update 무시.</description>
    </item>
    <item>
      <title>Helm Repo Index</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_repo_index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_repo_index/</guid>
      <description>helm repo index 패키지된 차트를 포함하는 디렉터리에 인덱스 파일을 생성&#xA;개요 현재 디렉터리를 읽고 찾은 차트를 기반으로 색인 파일을 생성한다.&#xA;이 도구는 차트 저장소에 대한 &#39;index.yaml&#39; 파일을 만드는데 사용된다. 차트에 대한 절대 URL을 설정하려면 &#39;--url&#39; 플래그를 사용하자.&#xA;생성된 인덱스를 기존 인덱스 파일과 병합하려면, &#39;--merge&#39; 플래그를 사용하자. 이 경우 현재 디렉터리에 있는 차트가 기존 인덱스에 병합되고 로컬차트가 기존차트보다 우선한다.&#xA;helm repo index [DIR] [flags] 옵션 -h, --help helm repo index 명령어의 도움말 --merge string 생성된 색인을 주어진 색인에 병합 --url string 차트 저장소의 url 부모 명령어에서 상속된 옵션들 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-as-group stringArray 작업에 관해 제시할 그룹.</description>
    </item>
    <item>
      <title>Helm Repo List</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_repo_list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_repo_list/</guid>
      <description>helm repo list 차트 저장소 나열&#xA;개요 차트 저장소를 나열한다.&#xA;helm repo list [flags] Options -h, --help helm repo list 명령어의 도움말 -o, --output format 지정된 형식으로 출력. 허용되는 값: table, json, yaml (기본값 table) 부모 명령어에서 상속된 옵션들 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-as-group stringArray 작업에 관해 제시할 그룹. 플래그를 여러 번 사용하여 여러 그룹 지정 가능 --kube-as-user string 작업에 관해 제시할 사용자명 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용될 베어러(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 -n, --namespace string 이 요청에 대한 네임스페이스 스코프 --registry-config string 레지스트리 구성 파일에 대한 경로 (기본값 &amp;#34;~/.</description>
    </item>
    <item>
      <title>Helm Repo Remove</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_repo_remove/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_repo_remove/</guid>
      <description>helm repo remove 하나 이상의 차트 저장소 제거&#xA;개요 하나 이상의 차트 저장소를 제거한다.&#xA;helm repo remove [REPO1 [REPO2 ...]] [flags] 옵션 -h, --help helm repo remove 명령어에 대한 도움말 부모 명령어에서 상속된 옵션들 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-as-group stringArray 작업에 관해 제시할 그룹. 플래그를 여러 번 사용하여 여러 그룹 지정 가능 --kube-as-user string 작업에 관해 제시할 사용자명 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용될 베어러(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 -n, --namespace string 이 요청에 대한 네임스페이스 스코프 --registry-config string 레지스트리 구성 파일에 대한 경로 (기본값 &amp;#34;~/.</description>
    </item>
    <item>
      <title>Helm Repo Update</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_repo_update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_repo_update/</guid>
      <description>helm repo update 차트 저장소에서 로컬로 사용 가능한 차트의 정보를 업데이트한다.&#xA;개요 업데이트 명령어는 각 차트 레포지터리에서 차트에 대한 최신 정보를 가져온다. 정보는 &#39;helm search&#39; 와 같은 명령에서 사용되는 것과 같이 로컬에 캐싱된다.&#xA;helm repo update [flags] 옵션 -h, --help helm repo update 명령어에 대한 도움말 부모 명령어에서 상속된 옵션들 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-as-group stringArray 작업에 관해 제시할 그룹. 플래그를 여러 번 사용하여 여러 그룹 지정 가능 --kube-as-user string 작업에 관해 제시할 사용자명 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용될 베어러(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 -n, --namespace string 이 요청에 대한 네임스페이스 스코프 --registry-config string 레지스트리 구성 파일에 대한 경로 (기본값 &amp;#34;~/.</description>
    </item>
    <item>
      <title>Helm Rollback</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_rollback/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_rollback/</guid>
      <description>helm rollback 릴리스를 이전 리비젼으로 롤백한다.&#xA;개요 이 명령은 릴리스를 이전 리비젼으로 롤백한다.&#xA;rollback 명령어의 첫 번째 인수는 릴리스의 이름이고, 두 번째 인수는 리비젼(버전) 번호이다. 이 인수를 생략하면 바로 이전 릴리스로 롤백 된다.&#xA;리비젼 번호를 보려면 &#39;helm history RELEASE&#39; 를 실행하자.&#xA;helm rollback &amp;lt;RELEASE&amp;gt; [REVISION] [flags] 옵션 --cleanup-on-fail 롤백이 실패할 때 이 롤백에서 생성된 새 리소스의 삭제를 허용 --dry-run 롤백 모의 실행 --force 필요한 경우 삭제/재작성을 통해 리소스를 강제로 업데이트 -h, --help rollback 명령어에 대한 도움말 --history-max int 릴리스 당 저장되는 최대 리비젼 수를 제한.</description>
    </item>
    <item>
      <title>Helm Search</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_search/</guid>
      <description>helm search 차트에서 키워드 검색&#xA;개요 검색은 추가 한 헬름 허브 및 저장소를 포함하여 저장할 수있는 다양한 위치에서 Helm 차트를 검색하는 기능을 제공한다. search 하위 명령을 사용하여 차트의 다른 위치를 검색한다.&#xA;옵션 -h, --help helm search 명령어에 대한 도움말 부모 명령어에서 상속된 옵션들 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-as-group stringArray 작업에 관해 제시할 그룹. 플래그를 여러 번 사용하여 여러 그룹 지정 가능 --kube-as-user string 작업에 관해 제시할 사용자명 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용될 베어러(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 -n, --namespace string 이 요청에 대한 네임스페이스 스코프 --registry-config string 레지스트리 구성 파일에 대한 경로 (기본값 &amp;#34;~/.</description>
    </item>
    <item>
      <title>Helm Search Hub</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_search_hub/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_search_hub/</guid>
      <description>helm search hub 헬름 허브 또는 모노큘러 인스턴스에서 차트 검색&#xA;개요 헬름 차트에 대한 헬름 허브 또는 모노큘러 인스턴스를 검색한다.&#xA;헬름허브는 공개적으로 사용 가능한 분산 형 차트에 대한 중앙 집중식 검색을 제공한다. 헬름 프로젝트에서 관리한다. https://hub.helm.sh에서 방문 할 수 있다.&#xA;모노큘러(Monocular)는 여러 헬름 차트 저장소에서 차트를 검색 할 수있는 웹 기반 애플리케이션이다. 헬름 허브를 구동하는 코드베이스이다. https://github.com/helm/monocular에서 찾을 수 있다.&#xA;helm search hub [keyword] [flags] Options --endpoint string 차트에 대해 질의할 모노큘러 인스턴스 (기본값 &amp;#34;https://hub.</description>
    </item>
    <item>
      <title>Helm Search Repo</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_search_repo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_search_repo/</guid>
      <description>helm search repo 차트에서 키워드에 대한 저장소 검색&#xA;개요 검색은 시스템에 구성된 모든 저장소를 읽고 일치하는 항목을 찾는다. 이러한 저장소 검색은 시스템에 저장된 메타 데이터를 사용한다.&#xA;찾은 차트의 최신 안정 버전을 표시한다. --devel 플래그를 지정하면 출력에 시험판 버전이 포함된다. 버전 제약을 사용하여 검색하려면 --version 을 사용하자.&#xA;예:&#xA;# 키워드 &amp;quot;nginx&amp;quot; 와 일치하는 안정적인 릴리스 버전 검색&#xD;$ helm search repo nginx&#xD;# 시험판 버전을 포함하여 키워드 &amp;quot;nginx&amp;quot; 와 일치하는 리릴스 버전 검색&#xD;$ helm search repo nginx --devel&#xD;# 주 버전이 1인 nginx-ingress 의 최신 안정 릴리스 검색&#xD;$ helm search repo nginx-ingress --version ^1.</description>
    </item>
    <item>
      <title>Helm Show</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_show/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_show/</guid>
      <description>helm show 차트의 정보를 보여준다&#xA;개요 이 명령어는 차트에 대한 정보를 표시하는 여러 하위 명령어들로 구성된다&#xA;옵션 -h, --help show 에 대한 도움말 부모 명령어에서 상속된 옵션들 --add-dir-header 이 값이 참이면, 헤더에 파일 디렉토리를 추가 --alsologtostderr 파일처럼 표준 오류로도 로그 출력 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용될 베어러(bearer) 토큰 --kubeconfig string kubeconfig 파일 경로 --log-backtrace-at traceLocation 로깅 시 N 행에 걸친 스택 추적 내용을 표시 (기본값 :0) --log-dir string 값을 지정하면, 지정한 디렉토리에 로그 파일 기록 --log-file string 값을 지정하면, 지정한 로그 파일 사용 --log-file-max-size uint 로그파일이 증가할 수 있는 최대 크기 지정.</description>
    </item>
    <item>
      <title>Helm Show All</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_show_all/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_show_all/</guid>
      <description>helm show all 차트의 모든 정보를 표시한다&#xA;개요 이 명령어는 차트(디렉터리, 파일 또는 URL)를 검사하고 모든 내용을 보여준다. (values.yaml, Charts.yaml, README)&#xA;helm show all [CHART] [flags] 옵션 --ca-file string CA 번들을 사용하여 HTTPS 사용 서버의 인증서를 확인 --cert-file string SSL 인증서 파일을 사용하여 HTTPS 클라이언트 식별 --devel 개발 버전도 사용. 버전 &amp;#39;&amp;gt;0.0.0-0&amp;#39;에 해당하며 --version 이 설정되면 무시 -h, --help all 에 대한 도움말 --key-file string SSL 키 파일을 사용하여 HTTPS 클라이언트 식별 --keyring string 확인에 사용되는 공개 키의 위치 (기본값 &amp;#34;~/.</description>
    </item>
    <item>
      <title>Helm Show Chart</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_show_chart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_show_chart/</guid>
      <description>helm show chart 차트의 정의를 보여준다&#xA;개요 이 명령어는 차트(디렉터리, 파일 또는 URL)를 검사하고 Charts.yaml 파일의 내용을 보여준다.&#xA;helm show chart [CHART] [flags] 옵션 --ca-file string CA 번들을 사용하여 HTTPS 사용 서버의 인증서를 확인 --cert-file string SSL 인증서 파일을 사용하여 HTTPS 클라이언트 식별 --devel 개발 버전도 사용. 버전 &amp;#39;&amp;gt;0.0.0-0&amp;#39;에 해당하며 --version 이 설정되면 무시 -h, --help chart 에 대한 도움말 --key-file string SSL 키 파일을 사용하여 HTTPS 클라이언트 식별 --keyring string 확인에 사용되는 공개 키의 위치 (기본값 &amp;#34;~/.</description>
    </item>
    <item>
      <title>Helm Show Readme</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_show_readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_show_readme/</guid>
      <description>helm show readme 차트의 README 파일을 표시&#xA;개요 이 명령어는 차트(디렉터리, 파일 또는 URL)을 검사하고 README 파일의 내용을 보여준다.&#xA;helm show readme [CHART] [flags] 옵션 --ca-file string CA 번들을 사용하여 HTTPS 사용 서버의 인증서를 확인 --cert-file string SSL 인증서 파일을 사용하여 HTTPS 클라이언트 식별 --devel 개발 버전도 사용. 버전 &amp;#39;&amp;gt;0.0.0-0&amp;#39;과 동등하다. --version 이 지정되면, 이것은 무시된다 -h, --help readme 에 대한 도움말 --key-file string SSL 키 파일을 사용하여 HTTPS 클라이언트 식별 --keyring string 확인에 사용되는 공개 키의 위치 (기본값 &amp;#34;~/.</description>
    </item>
    <item>
      <title>Helm Show Values</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_show_values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_show_values/</guid>
      <description>helm show values 차트의 값을 표시&#xA;개요 이 명령어는 차트(디렉터리, 파일 또는 URL)를 검사하고, values.yaml 파일의 내용을 보여준다.&#xA;helm show values [CHART] [flags] 옵션 --ca-file string CA 번들을 사용하여 HTTPS 사용 서버의 인증서를 확인 --cert-file string SSL 인증서 파일을 사용하여 HTTPS 클라이언트 식별 --devel 개발 버전도 사용. 버전 &amp;#39;&amp;gt;0.0.0-0&amp;#39;에 해당하며 --version 이 설정되면 무시 -h, --help values 에 대한 도움말 --key-file string SSL 키 파일을 사용하여 HTTPS 클라이언트 식별 --keyring string 확인에 사용되는 공개 키의 위치 (기본값 &amp;#34;~/.</description>
    </item>
    <item>
      <title>Helm Status</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_status/</guid>
      <description>helm status 명명된 릴리스의 상태를 표시한다&#xA;개요 이 명령어는 명명된 릴리스의 상태를 표시한다. 상태는 다음으로 구성된다:&#xA;마지막 배포 시간 릴리스가 있는 k8s 네임스페이스 릴리스의 상태 (가능한 값: unknown, deployed, uninstalled, superseded, failed, uninstalling, pending-install, pending-upgrade or pending-rollback) 이 릴리스를 구성하는, 종류(kind)로 정렬된 리소스 목록 해당되는 경우, 마지막 테스트 스위트(test suite) 수행에 관한 세부 정보 차트에서 제공하는 추가적인 참고 사항 helm status RELEASE_NAME [flags] 옵션 -h, --help helm status 에 대한 도움말 -o, --output format 지정된 형식으로 결과를 표시한다.</description>
    </item>
    <item>
      <title>Helm Template</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_template/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_template/</guid>
      <description>helm template 로컬에서 템플릿을 렌더링 한다.&#xA;개요 차트 템플릿을 로컬에서 렌더링하고 그 결과를 표시한다.&#xA;일반적으로 클러스터 내에서 조회되거나 검색되는 모든 값은 로컬에서 즉흥적으로 사용(faked)된다. 또한 차트 유효성에 대한 서버 측 테스트 (예 : API 지원 여부)가 수행되지는 않는다.&#xA;helm template [NAME] [CHART] [flags] 옵션 -a, --api-versions stringArray Capabilities.APIVersions에 사용되는 쿠버네티스 API 버전 --atomic 설정된 경우, 설치 프로세스는 실패할 경우에 대하여 설치본을 삭제. --atomic 을 사용하면 --wait 플래그도 자동으로 설정 --ca-file string 이 CA 번들을 사용하여 HTTPS 사용 서버의 인증서를 확인 --cert-file string 이 SSL 인증서 파일을 사용하여 HTTPS 클라이언트 식별 --create-namespace 릴리스 네임스페이스가 없는 경우 생성 --dependency-update 차트를 설치하기 전에 헬름 종속성 업데이트 실행 --description string 사용자 정의 설명 추가 --devel 개발버전으로도 사용 가능.</description>
    </item>
    <item>
      <title>Helm Test</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_test/</guid>
      <description>helm test 릴리스에 대하여 테스트를 수행한다.&#xA;개요 test 명령어는 릴리스에 대한 테스트를 실행한다.&#xA;이 명령어가 받는 인수는 배포된 릴리스의 이름이다. 실행할 테스트는 설치된 차트에 정의되어 있다.&#xA;helm test [RELEASE] [flags] 옵션 -h, --help helm test 에 대한 도움말 --logs 테스트 파드에서 로그를 덤프 (모든 테스트가 완료된 후 정리 전에 실행) --timeout duration 개별 쿠버네티스 작업(예: 훅에 대한 작업)을 기다리는 시간 제한 (기본값 5m0s) 부모 명령어에서 상속된 옵션들 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-as-group stringArray 작업에 관해 제시할 그룹.</description>
    </item>
    <item>
      <title>Helm Uninstall</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_uninstall/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_uninstall/</guid>
      <description>helm uninstall 릴리스 언인스톨&#xA;개요 이 명령어는 릴리스 이름을 사용하여 릴리스를 언인스톨한다.&#xA;차트의 마지막 릴리스 및 릴리스 내역과 관련된 모든 리소스를 제거하여 나중에 사용할 수 있도록 해제한다.&#xA;실제 언인스톨은 하지 않고 릴리스가 언인스톨되는 것을 확인해보려면 &#39;--dry-run&#39; 플래그를 사용하자.&#xA;helm uninstall RELEASE_NAME [...] [flags] Options --description string 사용자 정의 설명 추가 --dry-run 언인스톨 시뮬레이션 -h, --help uninstall 에 대한 도움말 --keep-history 모든 관련 리소스를 제거하고 릴리스를 삭제로 표시하지만 릴리스 내역은 유지 --no-hooks 언인스톨 중 훅(hook) 실행 방지 --timeout duration 개별 쿠버네티스 작업(예: 훅(hook)을 위한 작업)을 기다리는 시간 (기본값 5m0s) 상위 명령에서 상속된 옵션들 --add-dir-header 이 값이 true이면, 헤더에 파일 디렉토리를 추가 --alsologtostderr 파일처럼 표준 오류로도 로그 출력 --debug 장황한(verbose) 출력 활성화 --kube-apiserver string 쿠버네티스 API 서버의 주소 및 포트 --kube-context string 사용할 kubeconfig 컨텍스트 이름 --kube-token string 인증에 사용될 문자열 전달 토큰 --kubeconfig string kubeconfig 파일 경로 --log-backtrace-at traceLocation 로깅 시 N 행에 걸친 스택 추적 내용을 표시 (기본값 :0) --log-dir string 이 값이 비어있지 않을 경우, 이 값에 지정된 디렉토리에 로그 파일 쓰기 수행 --log-file string 이 값이 비어있지 않을 경우, 이 값에 지정된 파일명으로 로그 파일 쓰기 수행 --log-file-max-size uint 로그파일이 증가할 수 있는 최대 크기 지정.</description>
    </item>
    <item>
      <title>Helm Upgrade</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_upgrade/</guid>
      <description>helm upgrade 릴리스를 업그레이드한다.&#xA;개요 이 명령어는 릴리스를 새 버전의 차트로 업그레이드한다.&#xA;업그레이드 시 사용되는 인수는 릴리스 및 차트여야 한다. 차트의 인수는 차트 참조(&#39;example/mariadb&#39;), 차트 디렉터리 경로, 패키지 차트 또는 정규화된 URL 중 하나일 수 있다. 차트 참조 시 &#39;--version&#39; 플래그가 설정되지 않았을 경우 최신 버전이 지정된다.&#xA;차트의 값을 재정의하려면 &#39;--values&#39; 플래그를 사용하고 파일을 전달하거나 &#39;--set&#39; 플래그를 사용하고 명령 줄에서 구성을 전달하고, 문자열 값을 강제하려면 &#39;--set-string&#39; 을 사용한다. 값이 큰 경우 &#39;--value&#39;나 &#39;--set&#39; 대신 &#39;--set-file&#39;을 사용하여 파일에서 하나의 큰 값을 읽을 수도 있다.</description>
    </item>
    <item>
      <title>Helm Verify</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_verify/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_verify/</guid>
      <description>helm verify 주어진 경로의 차트가 서명되었고, 유효한지 확인한다.&#xA;개요 주어진 차트에 유효한 출처(provenance) 파일이 있는지를 검증한다.&#xA;출처 파일은 차트가 변조되지 않았으며 신뢰할 수 있는 공급자가 패키징했다는 암호화 검증을 제공한다.&#xA;이 명령어는 로컬 차트를 검증하는데 사용될 수 있다. 다른 여러 명령어는 동일한 유효성 검사를 실행하는 &#39;--verify&#39; 플래그를 제공한다. 서명된 패키지를 생성하기 위해서는 &#39;helm package --sign&#39; 명령어를 사용하자.&#xA;helm verify PATH [flags] 옵션 -h, --help verify 에 대한 도움말 --keyring string 공개 키를 포함하는 키링(keyring) (기본값 &amp;#34;~/.</description>
    </item>
    <item>
      <title>Helm Version</title>
      <link>https://sma-rnd.github.io/ko/docs/helm/helm_version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://sma-rnd.github.io/ko/docs/helm/helm_version/</guid>
      <description>helm version 클라이언트 버전 정보를 출력한다.&#xA;개요 헬름의 버전을 표시한다.&#xA;이 명령어는 헬름 버전을 특정 형식으로 출력한다. 출력결과는 대략 다음과 같을 것이다.&#xA;version.BuildInfo{Version:&amp;quot;v3.2.1&amp;quot;, GitCommit:&amp;quot;fe51cd1e31e6a202cba7dead9552a6d418ded79a&amp;quot;, GitTreeState:&amp;quot;clean&amp;quot;, GoVersion:&amp;quot;go1.13.10&amp;quot;}&#xA;Version 은 릴리스의 유의적(semantic) 버전이다.&#xA;GitCommit 은 이 버전이 빌드된 커밋의 SHA 값이다.&#xA;GitTreeState 는 이 바이너리를 빌드할 때 로컬 코드 변경이 없었으면 &amp;quot;clean&amp;quot; 이고, 로컬에서 수정된 코드로 빌드한 바이너리이면 &amp;quot;dirty&amp;quot; 이다.&#xA;GoVersion 은 헬름을 컴파일할 때 사용된 Go 버전이다. --template 플래그를 사용하면 템플릿에서 다음 속성을 사용할 수 있다:</description>
    </item>
  </channel>
</rss>
