<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>How-to on Helm</title>
    <link>https://helm.sh/ja/docs/howto/</link>
    <description>Recent content in How-to on Helm</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <atom:link href="https://helm.sh/ja/docs/howto/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>チャート開発のヒントとコツ</title>
      <link>https://helm.sh/ja/docs/howto/charts_tips_and_tricks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://helm.sh/ja/docs/howto/charts_tips_and_tricks/</guid>
      <description>このガイドでは、 Helm チャート開発者がプロダクション品質のチャートを構築する際に学んだヒントやコツを紹介しています。&#xA;テンプレートの関数を知る Helm はリソースファイルのテンプレートに Go テンプレートを使用します。 Go にはいくつかの組み込み機能がありますが、 他にも多くの機能が追加されています。&#xA;まず、 Sprig ライブラリの関数をすべて追加しました。&#xA;また、include と required の2つの特別なテンプレート関数を追加しました。 include 関数では、別のテンプレートを持ち込んで、 その結果を他のテンプレート関数に渡すことができます。&#xA;例えば、このテンプレートスニペットは mytpl というテンプレートを含み、 その結果を小文字にして二重引用符で囲んでいます。&#xA;value: {{ include &amp;#34;mytpl&amp;#34; . | lower | quote }} required 関数では、テンプレートレンダリングに必要な特定の値のエントリを宣言することができます。 値が空の場合、テンプレートのレンダリングは ユーザーが送信したエラーメッセージで失敗します。&#xA;以下の required 関数の例は、.Values.who のエントリが必須であることを宣言し、 そのエントリが見つからない場合に エラーメッセージを表示します。&#xA;value: {{ required &amp;#34;A valid .Values.who entry required!&amp;#34; .Values.who }} 文字列を引用する、整数を引用しない 文字列データを扱う際には、文字列をそのままにしておくよりも、 引用符で囲んだ方が安全です。&#xA;name: {{ .Values.MyName | quote }} しかし、整数で作業するときは 値を引用しないでください。 これは多くの場合、Kubernetes 内部で parse エラーを引き起こす可能性があります。</description>
    </item>
  </channel>
</rss>
