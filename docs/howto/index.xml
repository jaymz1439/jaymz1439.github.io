<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>How-to on Helm</title>
    <link>https://zou-zongming.github.io/docs/howto/</link>
    <description>Recent content in How-to on Helm</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <atom:link href="https://zou-zongming.github.io/docs/howto/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Chart Development Tips and Tricks</title>
      <link>https://zou-zongming.github.io/docs/howto/charts_tips_and_tricks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zou-zongming.github.io/docs/howto/charts_tips_and_tricks/</guid>
      <description>This guide covers some of the tips and tricks Helm chart developers have learned while building production-quality charts.&#xA;Know Your Template Functions Helm uses Go templates for templating your resource files. While Go ships several built-in functions, we have added many others.&#xA;First, we added all of the functions in the Sprig library, except env and expandenv, for security reasons.&#xA;We also added two special template functions: include and required. The include function allows you to bring in another template, and then pass the results to other template functions.</description>
    </item>
    <item>
      <title>Syncing Your Chart Repository</title>
      <link>https://zou-zongming.github.io/docs/howto/chart_repository_sync_example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zou-zongming.github.io/docs/howto/chart_repository_sync_example/</guid>
      <description>Note: This example is specifically for a Google Cloud Storage (GCS) bucket which serves a chart repository.&#xA;Prerequisites Install the gsutil tool. We rely heavily on the gsutil rsync functionality Be sure to have access to the Helm binary Optional: We recommend you set object versioning on your GCS bucket in case you accidentally delete something. Set up a local chart repository directory Create a local directory like we did in the chart repository guide, and place your packaged charts in that directory.</description>
    </item>
    <item>
      <title>Chart Releaser Action to Automate GitHub Page Charts</title>
      <link>https://zou-zongming.github.io/docs/howto/chart_releaser_action/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zou-zongming.github.io/docs/howto/chart_releaser_action/</guid>
      <description>This guide describes how to use Chart Releaser Action to automate releasing charts through GitHub pages. Chart Releaser Action is a GitHub Action workflow to turn a GitHub project into a self-hosted Helm chart repo, using helm/chart-releaser CLI tool.&#xA;Repository Changes Create a Git repository under your GitHub organization. You could give the name of the repository as helm-charts, though other names are also acceptable. The sources of all the charts can be placed under the main branch.</description>
    </item>
  </channel>
</rss>
