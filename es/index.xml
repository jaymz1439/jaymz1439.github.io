<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Helm</title>
    <link>https://zou-zongming.github.houston.softwaregrp.net/es/</link>
    <description>Recent content on Helm</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <atom:link href="https://zou-zongming.github.houston.softwaregrp.net/es/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Charts</title>
      <link>https://zou-zongming.github.houston.softwaregrp.net/es/docs/topics/charts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zou-zongming.github.houston.softwaregrp.net/es/docs/topics/charts/</guid>
      <description>Helm usa un formato de empaquetado llamado charts. Un chart es una colección de archivos que describen un conjunto relacionado de recursos de Kubernetes. Se puede usar un solo chart para implementar algo simple, como un pod de Memcached, o algo complejo, como una pila de aplicaciones web completa con servidores HTTP, bases de datos, cachés, etc.&#xA;Los charts se crean como archivos dispuestos en un árbol de directorios en particular.</description>
    </item>
    <item>
      <title>Consejos y Trucos para el Desarrollo de Charts</title>
      <link>https://zou-zongming.github.houston.softwaregrp.net/es/docs/howto/charts_tips_and_tricks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zou-zongming.github.houston.softwaregrp.net/es/docs/howto/charts_tips_and_tricks/</guid>
      <description>Esta guía cubre algunos de los consejos y trucos que los desarrolladores de charts de Helm han aprendido al crear charts con calidad de producción.&#xA;Conozca las funciones de plantilla Helm usa plantillas Go para crear plantillas para sus archivos de recursos. Si bien Go incluye varias funciones integradas, hemos agregado muchas otras.&#xA;Primero, agregamos todas las funciones en la biblioteca Sprig.&#xA;También agregamos dos funciones de plantilla especiales: include y required.</description>
    </item>
    <item>
      <title>Guía de inicio rápido</title>
      <link>https://zou-zongming.github.houston.softwaregrp.net/es/docs/intro/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zou-zongming.github.houston.softwaregrp.net/es/docs/intro/quickstart/</guid>
      <description>Esta guía explica cómo empezar a utilizar Helm rápidamente.&#xA;Requisitos Previos Los siguientes requisitos previos son necesarios para un uso exitoso y seguro de Helm.&#xA;Un cluster Kubernetes Decidir qué configuraciones de seguridad aplicar a su instalación, si corresponde Instalar y configurar Helm. Instalar Kubernetes o tener acceso a un clúster Debe tener Kubernetes instalado. Para la última versión de Helm, recomendamos la última versión estable de Kubernetes, que en la mayoría de los casos es la segunda versión menor más reciente.</description>
    </item>
    <item>
      <title>Ganchos de Chart</title>
      <link>https://zou-zongming.github.houston.softwaregrp.net/es/docs/topics/charts_hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zou-zongming.github.houston.softwaregrp.net/es/docs/topics/charts_hooks/</guid>
      <description>Helm proporciona un mecanismo de gancho (hook) que permite a los desarrolladores de charts intervenir en determinados puntos del ciclo de vida de un release. Por ejemplo, puede utilizar ganchos para:&#xA;Cargue un ConfigMap o un Secret durante la instalación antes de que se carguen otros charts. Ejecute un trabajo para hacer una copia de seguridad de una base de datos antes de instalar un nuevo chart y luego ejecute un segundo trabajo después de la actualización para restaurar los datos.</description>
    </item>
    <item>
      <title>Instalar Helm</title>
      <link>https://zou-zongming.github.houston.softwaregrp.net/es/docs/intro/install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zou-zongming.github.houston.softwaregrp.net/es/docs/intro/install/</guid>
      <description>Esta guía muestra cómo instalar Helm CLI. Helm se puede instalar desde la fuente o desde versiones binarias preconstruidas.&#xA;Desde el Proyecto Helm El proyecto Helm proporciona dos formas de obtener e instalar Helm. Estos son los métodos oficiales para obtener lanzamientos de Helm. Además de eso, la comunidad de Helm proporciona métodos para instalar Helm a través de diferentes administradores de paquetes. La instalación a través de esos métodos se puede encontrar debajo de los métodos oficiales.</description>
    </item>
    <item>
      <title>Sincronizar tu Repositorio de Charts</title>
      <link>https://zou-zongming.github.houston.softwaregrp.net/es/docs/howto/chart_repository_sync_example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zou-zongming.github.houston.softwaregrp.net/es/docs/howto/chart_repository_sync_example/</guid>
      <description>Nota: Este ejemplo es específico para un bucket de Google Cloud Storage (GCS) que sirve como repositorio de charts.&#xA;Requisitos Previos Instalar la herramienta gsutil. Dependemos en gran medida de la funcionalidad de gsutil rsync Asegúrese de tener acceso al binario de Helm Opcional: Le recomendamos que establezca control de versiones del objeto en su bucket de GCS en caso de que elimine algo accidentalmente. Configurar un directorio de repositorio de charts local Cree un directorio local como lo hicimos en la guía del repositorio de charts , y coloque sus charts empaquetados en ese directorio.</description>
    </item>
    <item>
      <title>Chart Releaser Action para automatizar página GitHub de Charts</title>
      <link>https://zou-zongming.github.houston.softwaregrp.net/es/docs/howto/chart_releaser_action/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zou-zongming.github.houston.softwaregrp.net/es/docs/howto/chart_releaser_action/</guid>
      <description>Esta guía describe cómo utilizar Chart Releaser Action para automatizar el releasing charts a través de las páginas GitHub. Chart Releaser Action es una GitHub Action workflow para converitrun proyecto GitHub en un repositorio de chart de Helm autoalojados, utilizando la herramienta helm/chart-releaser CLI.&#xA;Cambios en el repositorio Crear un repositorio Git en tu organización GitHub. Puedes dar el nombre del repositorio como helm-charts, aunque también son aceptables otros nombres. Las fuentes de todos los Charts pueden colocarse en la rama main.</description>
    </item>
    <item>
      <title>Pruebas de Chart</title>
      <link>https://zou-zongming.github.houston.softwaregrp.net/es/docs/topics/chart_tests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zou-zongming.github.houston.softwaregrp.net/es/docs/topics/chart_tests/</guid>
      <description>Un chart contiene varios recursos y componentes de Kubernetes que funcionan juntos. Como autor de charts, es posible que desee escribir algunas pruebas que validen que su chart funciona como se esperaba cuando se instala. Estas pruebas también ayudan al consumidor de charts a comprender lo que se supone que debe hacer su chart.&#xA;Una prueba en un chart de helm vive en el directorio templates/ y es una definición de trabajo que especifica un contenedor con un comando dado para ejecutar.</description>
    </item>
    <item>
      <title>Uso de Helm</title>
      <link>https://zou-zongming.github.houston.softwaregrp.net/es/docs/intro/using_helm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zou-zongming.github.houston.softwaregrp.net/es/docs/intro/using_helm/</guid>
      <description>Esta guía explica los conceptos básicos del uso de Helm para administrar paquetes en su clúster de Kubernetes. Asume que ya has instalado el cliente de Helm.&#xA;Si simplemente está interesado en ejecutar algunos comandos rápidos, es posible que desee comenzar con la Guía de inicio rápido. Este capítulo cubre los detalles de los comandos de Helm y explica cómo usar Helm.&#xA;Tres Grandes Conceptos Un Chart es un paquete de Helm.</description>
    </item>
    <item>
      <title>Charts de Bibliotecas</title>
      <link>https://zou-zongming.github.houston.softwaregrp.net/es/docs/topics/library_charts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zou-zongming.github.houston.softwaregrp.net/es/docs/topics/library_charts/</guid>
      <description>Un chart de biblioteca es un tipo de chart de Helm que define las primitivas o definiciones del chart que pueden ser compartidas por las plantillas de Helm en otros charts. Esto permite a los usuarios compartir fragmentos de código que se pueden reutilizar en los charts, evitando la repetición y manteniendo los charts DRY.&#xA;El chart de biblioteca se introdujo en Helm 3 para reconocer formalmente los charts comunes o auxiliares que han sido utilizados por los mantenedores de charts desde Helm 2.</description>
    </item>
    <item>
      <title>Procedencia e Integridad de Helm</title>
      <link>https://zou-zongming.github.houston.softwaregrp.net/es/docs/topics/provenance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zou-zongming.github.houston.softwaregrp.net/es/docs/topics/provenance/</guid>
      <description>Helm tiene herramientas de procedencia que ayudan a los usuarios de charts a verificar la integridad y el origen de un paquete. Utilizando herramientas estándar de la industria basadas en PKI, GnuPG y administradores de paquetes muy respetados, Helm puede generar y verificar archivos de firmas.&#xA;Descripción General La integridad se establece comparando un chart con un registro de procedencia. Los registros de procedencia se almacenan en archivos de procedencia, que se almacenan junto con un chart empaquetado.</description>
    </item>
    <item>
      <title>Arquitectura Helm</title>
      <link>https://zou-zongming.github.houston.softwaregrp.net/es/docs/topics/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zou-zongming.github.houston.softwaregrp.net/es/docs/topics/architecture/</guid>
      <description>Arquitectura de Helm Este documento describe la arquitectura de Helm a alto nivel.&#xA;El propósito de Helm Helm es una herramienta para gestionar paquetes Kubernetes llamados charts. Helm puede hacer lo siguiente:&#xA;Crear nuevos charts desde cero. Empaquetar charts en archivos de charts (tgz). Interactuar con repositorios de charts donde se almacenan charts. Instalar y desinstalar charts en un clúster Kubernetes existente. Gestionar el ciclo de lanzamiento de los charts instalados con Helm.</description>
    </item>
    <item>
      <title>Técnicas avanzadas de Helm</title>
      <link>https://zou-zongming.github.houston.softwaregrp.net/es/docs/topics/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zou-zongming.github.houston.softwaregrp.net/es/docs/topics/advanced/</guid>
      <description>Esta sección explica varias características avanzadas y técnicas para usar Helm. La información de esta sección está pensada para &amp;quot;usuarios avanzados&amp;quot; de Helm que quieren personalización avanzada y manipulación de sus Charts y releases. Cada una de estas funciones avanzadas tiene sus propias desventajas y advertencias, por lo que cada una debe usarse con cuidado y con un profundo conocimiento de Helm. O en otras palabras, recuerde el principio de Peter Parker</description>
    </item>
    <item>
      <title>Guía de distribución de Kubernetes</title>
      <link>https://zou-zongming.github.houston.softwaregrp.net/es/docs/topics/kubernetes_distros/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zou-zongming.github.houston.softwaregrp.net/es/docs/topics/kubernetes_distros/</guid>
      <description>Helm debería funcionar con cualquier versión conforme de Kubernetes (ya sea certificada o no).&#xA;Este documento recoge información sobre el uso de Helm en entornos Kubernetes específicos. Por favor, contribuya con más detalles sobre cualquier distro (ordenados alfabéticamente).&#xA;AKS Helm funciona con Azure Kubernetes Service.&#xA;DC/OS Helm ha sido probado y funciona en la plataforma Mesospheres DC/OS 1.11 Kubernetes, y no requiere ninguna configuración adicional.&#xA;EKS Helm funciona con Amazon Elastic Kubernetes Service (Amazon EKS): Uso de Helm con Amazon EKS.</description>
    </item>
    <item>
      <title></title>
      <link>https://zou-zongming.github.houston.softwaregrp.net/es/docs/intro/cheatsheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://zou-zongming.github.houston.softwaregrp.net/es/docs/intro/cheatsheet/</guid>
      <description>Cheat Sheet - HELM Helm cheatsheet con todos los comandos necesarios para gestionar una aplicación a través de Helm.&#xA;Interpretaciones básicas/contexto Chart:&#xA;Es el nombre de una Chart en caso de que haya sido subida pero no arrancada. Es &amp;lt;nombre_repo&amp;gt;/&amp;lt;nombre_chart&amp;gt; en caso de que el repositorio se haya añadido pero la chart no se haya extraído. Es la URL/ruta absoluta a la chart. Name:&#xA;Es el nombre que quiere dar a su instalación actual de helm chart.</description>
    </item>
  </channel>
</rss>
